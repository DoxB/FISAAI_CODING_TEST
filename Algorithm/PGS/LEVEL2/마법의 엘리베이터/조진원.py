def solution(storey):
    answer = 0  # 사용한 마법의 돌(버튼 누르기) 개수
    
    while storey != 0:
        k = storey % 10  # 현재 자리(1의 자리, 10의 자리 등)의 숫자 추출
        
        # 현재 자릿수가 6~9인 경우: 올리는 것이 더 효율적
        # 예: 7층에서 10층으로 올려서 -10 누르는 것이 더 적은 횟수
        if k > 5:
            answer += (10 - k)     # 올려서 다음 자릿수에서 빼는 전략
            storey += (10 - k)     # 현재 자릿수를 10으로 맞춰줌 (올림)
        
        # 현재 자릿수가 5이고, 다음 자릿수가 5 이상이면
        # → 이 경우는 올리는 쪽이 더 효율적인 경우
        elif k == 5 and ((storey % 100) // 10 >= 5):
            answer += k            # k만큼 올림 (ex: +5 버튼)
            storey += k            # 올려서 다음 자리수에 반영되도록 조정
        
        # 그 외의 경우 (0~4, 또는 5인데 다음 자리가 5 미만인 경우)
        # → 그냥 내리는 것이 더 효율적
        else:
            answer += k            # k만큼 내림 (ex: -k 버튼 누르기)
            storey -= k            # 해당 자릿수만큼 감소시켜서 0으로 만듦
        
        # 다음 자리수(10의 자리, 100의 자리 등)로 이동
        storey //= 10

    return answer  # 총 사용한 마법의 돌 개수 반환
